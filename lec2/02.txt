木構造を使えば O(log N)、ハッシュテーブルを使えばほぼ O(1) で検索・追加・削除を実現することができて、
これだけ見ればハッシュテーブルのほうが優れているように見える。
ところが現実の大規模なデータベースでは、ハッシュテーブルではなく木構造が使われることが多い。
その理由を考えよ。

1. いいハッシュ関数（というよりは衝突しづらい関数）では計算に時間がかかるから
2. データ数に対して空間利用率が変動しやすく、無駄になってしまうことが多いから
3. IDなどをキーにした場合、木構造の方が範囲検索がしやすい。ハッシュテーブルだと全部の値がバラバラになっちゃう。